{ lb-1: { std::Service: [ { type: 'std::Service', attr: 'name', state: 'varnish', last_result: 'DRYRUN', action: { level: 'INFO', timestamp: Date(Sun Aug 30 2015 17:27:02 GMT+0200 (CEST)), message: 'dry', data: { onboot: [ false, true ], state: [ 'stopped', 'running' ] }, action: 'dryrun' } } ], std::File: [ { type: 'std::File', attr: 'path', state: '/etc/hosts', last_result: 'DRYRUN', action: { level: 'INFO', timestamp: Date(Sun Aug 30 2015 17:27:02 GMT+0200 (CEST)), message: 'dry', data: { hash: [ 'a983aaa274e450705ec89584822af919e93741ef', 'bb0593b098efc4423c94b1d0e762e53af78cae52' ] }, action: 'dryrun' } }, { type: 'std::File', attr: 'path', state: '/etc/hostname', last_result: 'DRYRUN', action: { level: 'INFO', timestamp: Date(Sun Aug 30 2015 17:27:02 GMT+0200 (CEST)), message: 'dry', data: { hash: [ 'bfd7a3cbd956b531e6f19fed1c3efa69bfb53f31', 'd90f4f2d5dece6544b1b1e3de66a9c18f1f903b6' ] }, action: 'dryrun' } }, { type: 'std::File', attr: 'path', state: '/etc/sysconfig/network', last_result: 'DRYRUN', action: { level: 'INFO', timestamp: Date(Sun Aug 30 2015 17:27:02 GMT+0200 (CEST)), message: 'dry', data: { hash: [ '0142f6f0fc33dc4527c14bff3e721a4f5bac3cff', 'dd178ae7cc8adc27683b6b36aca06ec7257f15eb' ] }, action: 'dryrun' } }, { type: 'std::File', attr: 'path', state: '/etc/varnish/default.vcl', last_result: 'DRYRUN', action: { level: 'INFO', timestamp: Date(Sun Aug 30 2015 17:27:02 GMT+0200 (CEST)), message: 'dry', data: { purged: [ true, false ], hash: [ 0, 'e20354e2fff305e7f3bed89b628d87391e042d30' ] }, action: 'dryrun' } }, { type: 'std::File', attr: 'path', state: '/etc/varnish/varnish.params', last_result: 'DRYRUN', action: { level: 'INFO', timestamp: Date(Sun Aug 30 2015 17:26:59 GMT+0200 (CEST)), message: 'dry', data: { purged: [ true, false ], hash: [ 0, 'cd94671508ca5b1df57bad90fee52fda01e78fd6' ] }, action: 'dryrun' } } ], std::Package: [ { type: 'std::Package', attr: 'name', state: 'varnish', last_result: 'DRYRUN', action: { level: 'INFO', timestamp: Date(Sun Aug 30 2015 17:27:02 GMT+0200 (CEST)), message: 'dry', data: { state: [ 'removed', 'installed' ] }, action: 'dryrun' } } ] } }
